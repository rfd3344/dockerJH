# version: '3.7'

services:
  node-express:
    build:
      context: ./node-express
    ports:
      - 3345:3000
    volumes:
      - ./node-express:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    deploy:
      resources:
        limits:
          memory: 0.5G
    # depends_on:
    #   - redis-db

  postgres-db:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - ~/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  # redis-db:
  #   image: redis/redis-stack-server:latest
  #   restart: always
  #   # command: --port 6379
  #   ports:
  #     - '6379:6379'
  #   expose:
  #     - '6379'
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #   volumes:
  #     - ~/redis:/data

  # services:
  #   postgres:
  #     image: postgres:14-alpine
  #     ports:
  #       - 5432:5432
  #     volumes:
  #       - ~/apps/postgres:/var/lib/postgresql/data
  #     environment:
  #       - POSTGRES_PASSWORD=S3cret
  #       - POSTGRES_USER=citizix_user
  #       - POSTGRES_DB=citizix_db
  # docker run --name es01  -p 9200:9200 docker.elastic.co/elasticsearch/elasticsearch:8.14.3

  react-vite:
    build:
      context: ./react-vite
    ports:
      - 3341:3000
    volumes:
      - ./react-vite:/app # ./react-vite is host directory, /app is container directory
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true # watch file changes on host directory

# react-nextjs:
#   build:
#     context: ./react-nextjs
#   ports:
#     - 3342:3000
#   volumes:
#     - ./react-nextjs:/app
#     - /app/node_modules
#   environment:
#     - CHOKIDAR_USEPOLLING=true

# networks:
#   backend-network:
#     external: true
